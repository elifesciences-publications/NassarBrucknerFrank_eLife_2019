function [b, bint, h, p, LLFULL, LLRED] = regressW_mike(y,s,A,alpha,col2zero)% regressW peforms weighted least squares. % It is very similar to matlab's regress.m. Only here, each observation,% y, is associated with uncertainty, s.  %%% NOTE FROM MRN: s should be the expected standard deviation of the residuals... %%%% b = regressW(y,s,A)%   returns the coefficients of y = A*b which are best in the weighted%   least squares sense. Note that larger s means that this observation%   will have *less* leverage on the fit. If s is a column of 1's, the%   routine should be equivalent to standard least squares and return the%   same arguments as regress.m (although they are calculated differently).% [b,bint] = regressW(y,s,A,alpha)%   adds joint confidence intervals to the return argument. The default value%   for alpha is 0.05% [b,bint,h]  = regressW(y,s,A,alpha,col2zero)%   h is the result of an hypothesis test that b_i is 0 evaluated at the%   value in alpha. The vector col2zero lists the columns of A that are%   to be tested (i.e., the values of i in b_i). The default is to test%   each column one by one. % [b,bint,h,p]  = regressW(y,s,A,alpha,col2zero)%   returns the p values% [b,bint,h,p,LLFULL,LLRED] = regressW(y,s,A,alpha,col2zero)%   returns the log likelihood of obtaining the data in y given the full%   model each of the values associated with reduced models in which the%   columns in col2zero are set to 0.%% Note, the p values are computed on the assumption that error is% distributed as multivariate normal with expectation given by regression% and covariance estimated by the data. A likelihood ratios are then% computed by refitting the model without the coefficient.%% see lscov.m and regress.m%% Note, this function is intended to supercede nestedFml.m% limitations: it is not possible to test the model with more than one% column set to 0 right now. But it's easy to use 2 calls and comparing% log likelihood ratios returned in LLFULL. If you need to do this,%		p = 1-chi2cdf(2*(llikfull-llikred),df);% can be used to test p(H0), where llikfull is LLFULL from the truly full% model and llikred is LLFULL returned from the call with the reduced% model. The difference in columns of A under these calls is df.%% Ref. Draper & Smith, 2nd ed. pp. 97-98.  Needs stats toolbox.% See also pp.110ff and the notes in lscov.m%% 7/29/01 mns wrote it%% 11/13/00 spawned from nestedF.m% 7/29/01 updated to use mylscov.m% 9/2/01  updated method for computing p-values% 9/24/01 replaced mvnpdf with normpdf since cov mtx is diagonal% 9/24/01 added col2zero argument% 10/27/01 updated handling of the col2zero argumentstr = sprintf('nargin = %d',nargin);%warning(str)n = length(y);if length(s) ~= n  error('s and y must be same size column vectors')endV = diag(s.^2);[b db] = lscov(A,y,V);% Confidence intervals on fitted coefficientsif nargout > 1  % compute confidence intervals  if nargin < 4	 alpha = 0.05;  end  nu = abs(diff(size(A)));  tval = tinv((1-alpha/2),nu);  bint = [b - tval*db, b + tval*db];end% llikfull = log(mvnpdf(y,ypred,V));ypred = A * b;llikfull = sum(log(normpdf(y,ypred,s)));LLFULL = llikfull;% New version of hypothesis testsif nargout > 2  if nargin < 5	 % user did not specify which hypothesis tests to do	 % default is to run through each column of A	 col2zero = [1:size(A,2)];  end  if ~isempty(col2zero)	 ntests = length(col2zero);	 p = repmat(1,ntests,1);	 h = repmat(0,ntests,1);	 LLRED = repmat(nan,ntests,1);	 % sprintf('nargout = %d', nargout)	 % perform hypothesis tests.	 for i = 1:ntests		% refit the model removing the ith column		Ar = A;		Ar(:,col2zero(i)) = [];		[br] = lscov(Ar,y,V);		yrpred = Ar * br;		% llikred = log(mvnpdf(y,yrpred,V));		llikred = sum(log(normpdf(y,yrpred,s)));		LLRED(i) = llikred;		if llikred < llikfull		  p(i) = 1-chi2cdf(2*(llikfull-llikred),1);		else		  p(i) = 1;		end	 end	 h = p < alpha;  else	 	 sprintf('got here')	 % col2zero was set as empty	 h = nan;	 p = nan;	 LLRED = nan;  endend